#!/bin/bash

# Script para subir projeto para GitHub via CLI
# Autor: Assistente BLACKBOX.AI
# Uso: ./upload-github.sh (na pasta do projeto)

echo "=== Script de Upload para GitHub ==="
echo "Certifique-se de estar na pasta do projeto e que o repo vazio existe no GitHub."

# Pedir inputs
read -p "Digite seu Username do GitHub: " username
read -p "Digite o nome do Repositório no GitHub (ex: spfw-site): " repo_name
read -p "Digite a mensagem de commit (ex: Initial commit): " commit_msg
read -s -p "Digite seu Personal Access Token (não visível): " token
echo ""  # Nova linha após input invisível

# Verificar se Git está instalado
if ! command -v git &> /dev/null; then
    echo "ERRO: Git não está instalado. Instale em git-scm.com e tente novamente."
    exit 1
fi

# Nome da pasta atual como fallback para repo_name
current_dir=$(basename "$PWD")
if [ -z "$repo_name" ]; then
    repo_name="$current_dir"
    echo "Usando nome da pasta atual como repo: $repo_name"
fi

# URL do remote com credenciais embutidas (usado só no push)
remote_url="https://${username}:${token}@github.com/${username}/${repo_name}.git"

echo "Iniciando processo..."

# 1. Inicializar Git se não existir
if [ ! -d ".git" ]; then
    echo "Inicializando Git..."
    git init || { echo "ERRO no git init"; exit 1; }
else
    echo "Git já inicializado."
fi

# 2. Adicionar arquivos
echo "Adicionando arquivos..."
git add . || { echo "ERRO no git add"; exit 1; }

# 3. Commit
echo "Fazendo commit: $commit_msg"
git commit -m "$commit_msg" || { echo "ERRO no commit (talvez nada para commit?)"; exit 1; }

# 4. Adicionar remote se não existir
if git remote | grep -q origin; then
    echo "Remote 'origin' já existe. Pulando."
else
    echo "Adicionando remote: $remote_url"
    git remote add origin "$remote_url" || { echo "ERRO no remote add"; exit 1; }
fi

# 5. Definir branch main
git branch -M main || echo "Branch main já definida."

# 6. Push com credenciais embutidas (token usado só aqui)
echo "Fazendo push para GitHub..."
git push -u origin main || { echo "ERRO no push. Verifique username, repo, token ou conflitos."; exit 1; }

echo "=== SUCESSO! ==="
echo "Seu projeto foi enviado para https://github.com/${username}/${repo_name}"
echo "Revogue o token no GitHub agora (Settings > Developer settings > Personal access tokens)."
echo "Para pushes futuros: git add . && git commit -m 'msg' && git push"

# Limpeza: Remover credenciais do remote (deixar só a URL sem token para uso futuro)
git remote set-url origin "https://github.com/${username}/${repo_name}.git"
echo "Remote atualizado sem token para uso futuro."
